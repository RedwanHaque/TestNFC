import React, { useEffect, useState } from 'react';
import { View, Text, Button, Image, StyleSheet } from 'react-native';
import NfcManager, { NfcTech, Ndef } from 'react-native-nfc-manager';
import ImagePicker from 'react-native-image-picker';

const App = () => {
  const [image, setImage] = useState(null);

  useEffect(() => {
    NfcManager.start();
    return () => {
      NfcManager.stop();
    };
  }, []);

  const readTag = async () => {
    try {
      await NfcManager.registerTagEvent();
      const tag = await NfcManager.getTag();
      const tech = NfcTech.Ndef;
      const ndef = await NfcManager.getNdefMessage(tag);
      if (ndef && ndef.length > 0) {
        const uri = Ndef.uri.decodePayload(ndef[0].payload);
        console.log('Read NFC tag:', uri);
      }
    } catch (ex) {
      console.warn('Error reading NFC tag:', ex);
    } finally {
      await NfcManager.unregisterTagEvent();
    }
  };

  const pickImage = () => {
    ImagePicker.launchImageLibrary({}, response => {
      if (response.uri) {
        setImage(response.uri);
      }
    });
  };

  const writeTag = async () => {
    if (!image) {
      console.warn('Please pick an image first');
      return;
    }
    try {
      await NfcManager.requestTechnology(NfcTech.Ndef);
      const bytes = await fetch(image).then(res => res.arrayBuffer());
      const record = Ndef.record(Ndef.TNF_WELL_KNOWN, Ndef.RTD_URI, [], bytes);
      const message = [record];
      await NfcManager.writeNdefMessage(message);
      console.log('Wrote NFC tag:', message);
    } catch (ex) {
      console.warn('Error writing NFC tag:', ex);
    } finally {
      await NfcManager.cancelTechnologyRequest();
    }
  };

  return (
    <View style={styles.container}>
      <Text style={styles.title}>Transfer Image using NFC</Text>
      {image && <Image style={styles.image} source={{ uri: image }} />}
      <Button title="Pick Image" onPress={pickImage} />
      <Button title="Write NFC Tag" onPress={writeTag} />
      <Button title="Read NFC Tag" onPress={readTag} />
    </View>
  );
};

const styles = StyleSheet.create({
  container: {
    flex: 1,
    alignItems: 'center',
    justifyContent: 'center',
  },
  title: {
    fontSize: 20,
    fontWeight: 'bold',
    marginBottom: 20,
  },
  image: {
    width: 200,
    height: 200,
    marginBottom: 20,
  },
});

export default App;
